services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: magflow_app
    restart: unless-stopped
    env_file: .env
    environment:
      - DATABASE_URL=postgresql+asyncpg://app:pQ4mR9tY2wX7zK3nL8vB5cD1fG6hJ0@db:5432/magflow
      - REDIS_URL=redis://:pQ4mR9tY2wX7zK3nL8vB5cD1fG6hJ0@redis:6379/0
    volumes:
      - .:/app
      - /app/__pycache__
      - /app/.pytest_cache
      - /app/.venv
      - /app/node_modules
      - /app/frontend/node_modules
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  db:
    image: postgres:16
    container_name: magflow_db
    restart: unless-stopped
    env_file: .env
    environment:
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=pQ4mR9tY2wX7zK3nL8vB5cD1fG6hJ0
      - POSTGRES_DB=magflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d magflow"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: magflow_redis
    restart: unless-stopped
    command: redis-server --requirepass pQ4mR9tY2wX7zK3nL8vB5cD1fG6hJ0
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "pQ4mR9tY2wX7zK3nL8vB5cD1fG6hJ0", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: magflow_worker
    restart: unless-stopped
    env_file: .env
    environment:
      - DATABASE_URL=postgresql+asyncpg://app:pQ4mR9tY2wX7zK3nL8vB5cD1fG6hJ0@db:5432/magflow
      - CELERY_BROKER_URL=redis://:pQ4mR9tY2wX7zK3nL8vB5cD1fG6hJ0@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:pQ4mR9tY2wX7zK3nL8vB5cD1fG6hJ0@redis:6379/0
    command: ["celery", "-A", "app.worker:celery_app", "worker", "--loglevel=info", "--pool=solo", "--concurrency=1"]
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "celery", "-A", "app.worker:celery_app", "inspect", "ping"]
      interval: 60s
      timeout: 15s
      retries: 3

  beat:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: magflow_beat
    restart: unless-stopped
    env_file: .env
    environment:
      - DATABASE_URL=postgresql+asyncpg://app:pQ4mR9tY2wX7zK3nL8vB5cD1fG6hJ0@db:5432/magflow
      - CELERY_BROKER_URL=redis://:pQ4mR9tY2wX7zK3nL8vB5cD1fG6hJ0@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:pQ4mR9tY2wX7zK3nL8vB5cD1fG6hJ0@redis:6379/0
      - CELERY_HEARTBEAT_INTERVAL=60
    command: ["celery", "-A", "app.worker:celery_app", "beat", "--loglevel=info", "--pidfile=", "--schedule=/tmp/celerybeat-schedule"]
    depends_on:
      redis:
        condition: service_healthy
      worker:
        condition: service_healthy
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'celery beat' >/dev/null"]
      interval: 60s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
