# pgbouncer.ini - PgBouncer configuration with TLS and Prepared Statements

[databases]
magflow = host=db port=5432 dbname=magflow user=app password=app_password_change_me client_encoding=UTF8

[pgbouncer]
# Network settings
listen_addr = 0.0.0.0
listen_port = 6432
auth_type = md5
auth_file = /opt/bitnami/pgbouncer/conf/userlist.txt
auth_user = ${DB_USER:-app}

# Connection pooling
pool_mode = transaction
max_client_conn = 500
default_pool_size = 50
min_pool_size = 10
reserve_pool_size = 10
max_db_connections = 100
server_idle_timeout = 600
server_connect_timeout = 15
server_round_robin = 1
query_wait_timeout = 120

# Prepared statements support
max_prepared_statements = 200
server_reset_query_always = 1
server_reset_query = DISCARD ALL
server_check_delay = 10
server_lifetime = 1800
server_idle_timeout = 600

# Logging
log_connections = 1
log_disconnections = 1
log_pooler_errors = 1
log_stats = 1
stats_period = 60
verbose = 1

# TLS Configuration (Client to PgBouncer)
client_tls_sslmode = require
client_tls_cert_file = /opt/bitnami/pgbouncer/certs/server.crt
client_tls_key_file = /opt/bitnami/pgbouncer/certs/server.key
client_tls_ca_file = /opt/bitnami/pgbouncer/certs/ca.crt
client_tls_ciphers = HIGH:!aNULL:!MD5:!3DES:!CAMELLIA:!AES128-SHA256:!AES256-SHA384:!AES128-GCM-SHA256:!AES256-GCM-SHA384

# TLS Configuration (PgBouncer to PostgreSQL)
server_tls_sslmode = verify-ca
server_tls_ca_file = /opt/bitnami/pgbouncer/certs/ca.crt
server_tls_cert_file = /opt/bitnami/pgbouncer/certs/client.crt
server_tls_key_file = /opt/bitnami/pgbouncer/certs/client.key
server_tls_ciphers = HIGH:!aNULL:!MD5:!3DES:!CAMELLIA:!AES128-SHA256:!AES256-SHA384:!AES128-GCM-SHA256:!AES256-GCM-SHA384

# Additional security settings
ignore_startup_parameters = extra_float_digits,options
pkt_buf = 32768
max_packet_size = 16777216

# Admin and monitoring users
admin_users = postgres, app
stats_users = stats, app

# Timeouts
server_login_retry = 3
query_timeout = 0
idle_transaction_timeout = 0
