[pytest]
testpaths = tests
asyncio_mode = auto
norecursedirs = lib
pythonpath = .
log_cli = true
log_level = INFO
log_format = %(asctime)s [%(levelname)8s] %(message)s (%(name)s)
log_date_format = %Y-%m-%d %H:%M:%S
minversion = 7.0
addopts = 
    --strict-config
    --tb=short
    --durations=10
    --color=yes
    --showlocals
    # Disable coverage for now due to environment issues
    # --cov=app
    # --cov-report=term-missing
    # --cov-report=html:htmlcov
    # --cov-fail-under=80

# Test coverage configuration
[tool:pytest-cov]
source = app
omit = 
    */tests/*
    */migrations/*
    */__pycache__/*
    */venv/*
    */.venv/*
    */conftest.py

# Filter out common warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::UserWarning
    ignore::RuntimeWarning
    ignore::pytest.PytestDeprecationWarning
    ignore::pytest.PytestConfigWarning
    ignore::ResourceWarning
    ignore::PendingDeprecationWarning
    ignore::PasslibSecurityWarning
    # Ignore Pydantic V2 migration warnings
    ignore:Support for class-based `config` is deprecated:pydantic.PydanticDeprecatedSince20
    ignore:`min_items` is deprecated:pydantic.PydanticDeprecatedSince20
    ignore:`max_items` is deprecated:pydantic.PydanticDeprecatedSince20
    ignore:`json_encoders` is deprecated:pydantic.PydanticDeprecatedSince20
    ignore::pytest.PytestUnknownMarkWarning

# Register custom test markers
markers =
    # Test types
    unit: marks tests as unit tests (fast, isolated)
    integration: marks tests as integration tests (multiple components)
    api: marks tests that make API calls
    database: marks tests that require database access
    performance: marks performance-related tests
    smoke: marks smoke tests (basic functionality checks)
    e2e: marks end-to-end tests
    # Test characteristics
    slow: marks tests as slow (deselect with '-m "not slow"')
    flaky: marks tests that are known to be flaky
    # Feature categories
    auth: authentication and authorization tests
    products: product-related tests
    orders: order processing tests
    inventory: inventory management tests
    reports: reporting tests
    security: security-related tests
    integration: marks integration tests
    unit: marks unit tests
    e2e: marks end-to-end tests
    database: marks tests that require a database connection
    api: marks API tests
    auth: marks authentication tests
    performance: marks performance tests
    smoke: marks smoke tests
